{"ast":null,"code":"var _jsxFileName = \"/opt/rpx/react_ui/src/module/PatNum.js\";\nimport React, { Component } from 'react';\nimport logo from '../resource/rpx-insight-logo.png';\nimport ReactTable from \"react-table-6\";\nimport MyChart from './MyCharts';\nimport ScatterChart from './ScatterChart';\nimport \"react-table-6/react-table.css\";\nimport '../css/PatNum.css';\n\nclass PatNum extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: [],\n      sentence: '',\n      loading: false,\n      chart_list: {\n        'keys': [],\n        'book': [],\n        'corpus': []\n      },\n      field: 'title_vec',\n      term: 'knn',\n      corpus: 0,\n      limit: 10,\n      total: 0,\n      location: null,\n      isLoading: 'true'\n    };\n  }\n\n  fetchIpLocation() {\n    fetch('https://ipapi.co/json/').then(response => response.json()).then(data => this.setState({\n      location: data,\n      isLoading: false\n    })).catch(error => this.setState({\n      error,\n      isLoading: false\n    }));\n  }\n\n  componentDidMount() {\n    this.fetchIpLocation();\n  }\n\n  generate_talbe(result) {\n    // console.log('responce:' + JSON.stringify(result))\n    let _item = [];\n    result.forEach((items, index) => {\n      let item = items._source;\n      let colls = 'Result';\n      if (this.state.corpus > 0 && index >= this.state.limit) colls = 'Corpus';\n\n      _item.push({\n        'bookId': /*#__PURE__*/React.createElement(\"div\", {\n          className: \"cell\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 27\n          }\n        }, item.bookId),\n        'title': /*#__PURE__*/React.createElement(\"div\", {\n          className: \"cell\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 26\n          }\n        }, item.title),\n        'authors': /*#__PURE__*/React.createElement(\"div\", {\n          className: \"cell\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 28\n          }\n        }, item.authors),\n        'published_year': /*#__PURE__*/React.createElement(\"div\", {\n          className: \"cell\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 35\n          }\n        }, item.published_year),\n        'num_pages': /*#__PURE__*/React.createElement(\"div\", {\n          className: \"cell\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 30\n          }\n        }, parseInt(item.num_pages)),\n        'score': /*#__PURE__*/React.createElement(\"div\", {\n          className: \"cell\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 26\n          }\n        }, items._score.toFixed(2)),\n        'collection': /*#__PURE__*/React.createElement(\"div\", {\n          className: \"cell\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 31\n          }\n        }, colls)\n      });\n    });\n    this.setState({\n      isLoaded: true,\n      items: _item,\n      loading: false\n    });\n  }\n\n  search_patent(event) {\n    event.preventDefault(); //         console.log(\"Keyword: \" + this.state.sentence)\n\n    if (this.state.sentence !== null && this.state.sentence !== '') {\n      this.setState({\n        loading: true\n      }); //             console.log('Api called.')\n\n      let api = 'http://52.66.250.236:3000/search?index=books_lexical&keyword=' + this.state.sentence + '&field=' + this.state.field + '&limit=' + this.state.limit + '&term=' + this.state.term + '&num=' + this.state.corpus + '&location=' + this.state.location; // let api = 'http://prod-spark-node1:1212/patnum?index=pat-index&search_field=pat_id&patnum=' + this.state.sentence\n\n      fetch(api).then(res => res.json()).then(response => {\n        if (response.status) {\n          this.generate_talbe(response.result);\n          this.setState({\n            total: response.result.length\n          });\n          if (response.is_knn) this.setState({\n            chart_list: response.chart_data.scatter\n          });else {\n            let _temp = {\n              'keys': [],\n              'book': [],\n              'corpus': []\n            };\n            this.setState({\n              chart_list: _temp\n            });\n          } //                             console.log('SUCCESS: ' + response.result.length)\n        } else {\n          //                             console.log(response.error)\n          this.setState({\n            loading: false\n          });\n        }\n      }, error => {\n        this.setState({\n          isLoaded: true,\n          error\n        }); //                         console.log('ERROR: ' + error);\n\n        this.setState({\n          loading: false\n        });\n      });\n    } else {\n      console.log('Empty field.');\n    }\n  }\n\n  componentDidMount() {\n    let test_item = JSON.parse('[{\"_index\": \"pat-index\", \"_type\": \"_doc\", \"_id\": \"9749188\", \"_score\": 0.88840634, \"_source\": {\"cpc_full\": \"B42D15/0033\", \"issued_date_or_app_filing_date\": \"1944-02-29\", \"pat_id\": 9749188, \"title\": \"Insurance policy\", \"patnum\": \"US2342981A\"}}, {\"_index\": \"pat-index\", \"_type\": \"_doc\", \"_id\": \"12120408\", \"_score\": 0.88840634, \"_source\": {\"cpc_full\": \"B42D15/0033\", \"issued_date_or_app_filing_date\": \"1941-12-23\", \"pat_id\": 12120408, \"title\": \"Insurance policy\", \"patnum\": \"US2267507A\"}}]');\n    this.generate_talbe([]);\n  }\n\n  set_limit(event) {\n    let _val = parseInt(event.target.value);\n\n    this.setState({\n      limit: _val\n    });\n    console.log('Limit set to:' + _val);\n  }\n\n  set_limit1(event) {\n    let _val = parseInt(event.target.value);\n\n    this.setState({\n      corpus: _val\n    });\n    console.log('Limit set to:' + _val);\n  }\n\n  set_sentence(event) {\n    let _val = event.target.value; // let _val = event.target.value.replace(/[\\W_]+/g, ',').replace(/^\\,$/g, '')\n\n    this.setState({\n      sentence: _val\n    });\n    console.log('Keyword set to:' + this.state.sentence);\n  }\n\n  set_field(event) {\n    let _val = event.target.value;\n    let _term = 'text';\n\n    if (_val.includes('vec')) {\n      _term = 'knn';\n    }\n\n    this.setState({\n      field: event.target.value,\n      term: _term\n    }); // console.log('Filed set to:' + event.target.value)\n  }\n\n  render() {\n    const columns = [{\n      Header: 'TITLE',\n      accessor: 'title',\n      minWidth: 100,\n      headerClassName: 'table-header',\n      footerClassName: 'table-header'\n    }, {\n      Header: 'AUTHORS',\n      accessor: 'authors',\n      headerClassName: 'table-header',\n      minWidth: 80\n    }, {\n      Header: 'PUBLICATION YEAR',\n      accessor: 'published_year',\n      headerClassName: 'table-header',\n      maxWidth: 140\n    }, {\n      Header: 'PAGES',\n      accessor: 'num_pages',\n      headerClassName: 'table-header',\n      maxWidth: 60\n    }, {\n      Header: 'SCORE',\n      accessor: 'score',\n      headerClassName: 'table-header',\n      maxWidth: 60\n    }, {\n      Header: 'COLLECTION',\n      accessor: 'collection',\n      headerClassName: 'table-header',\n      maxWidth: 100\n    }];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"PatNum\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"PatNum-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"PatNum-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 21\n      }\n    }, \"Building a real-time similarity matching system using Embedding\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"PatNum-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      className: \"PatNum-cont-pane\",\n      onSubmit: () => this.search_patent(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"left-cont-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"PatNum-pane-tap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"left-cont\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"textarea\", {\n      spellCheck: \"false\",\n      className: \"pat_text\",\n      placeholder: \"Keywords eg: System\",\n      onChange: () => this.set_sentence(event),\n      required: true,\n      value: this.state.sentence,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(\"select\", {\n      className: \"select_filed\",\n      onChange: () => this.set_field(event),\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      className: \"opt\",\n      value: \"title_vec\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 37\n      }\n    }, \"Title [USE]\"), /*#__PURE__*/React.createElement(\"option\", {\n      className: \"opt\",\n      value: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 37\n      }\n    }, \"Title [DB]\"), /*#__PURE__*/React.createElement(\"option\", {\n      className: \"opt\",\n      value: \"title_syn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 37\n      }\n    }, \"Title [ELASTIC]\"), /*#__PURE__*/React.createElement(\"option\", {\n      className: \"opt\",\n      value: \"title_desc\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 37\n      }\n    }, \"Title + DESC + [ELASTIC]\"), /*#__PURE__*/React.createElement(\"option\", {\n      className: \"opt\",\n      value: \"title_desc_vec\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 37\n      }\n    }, \"Title + DESC [USE] \")), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      className: \"corpus\",\n      min: \"2\",\n      max: \"1000\",\n      placeholder: \"Limit\",\n      defaultValue: \"10\",\n      onChange: () => this.set_limit(event),\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"right-cont\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      className: \"limit\",\n      min: \"0\",\n      max: \"1000\",\n      placeholder: \"corpus\",\n      onChange: () => this.set_limit1(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      className: \"PatNum-search\",\n      value: \"search\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 37\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"count\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 29\n      }\n    }, \"Total count: \", this.state.total), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"PatNum-pane-tap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(ReactTable, {\n      data: this.state.items,\n      columns: columns,\n      defaultPageSize: 10,\n      pageSizeOptions: [5, 10, 50, 100, 1000],\n      className: \"PatNum-table\",\n      showPagination: true,\n      loading: this.state.loading,\n      filterable: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 33\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"PatNum-pane-tap1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ScatterChart\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(ScatterChart, {\n      data: this.state.chart_list,\n      corpus: this.state.corpus,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 59\n      }\n    }))))));\n  }\n\n}\n\nexport default PatNum;","map":{"version":3,"sources":["/opt/rpx/react_ui/src/module/PatNum.js"],"names":["React","Component","logo","ReactTable","MyChart","ScatterChart","PatNum","constructor","props","state","error","isLoaded","items","sentence","loading","chart_list","field","term","corpus","limit","total","location","isLoading","fetchIpLocation","fetch","then","response","json","data","setState","catch","componentDidMount","generate_talbe","result","_item","forEach","index","item","_source","colls","push","bookId","title","authors","published_year","parseInt","num_pages","_score","toFixed","search_patent","event","preventDefault","api","res","status","length","is_knn","chart_data","scatter","_temp","console","log","test_item","JSON","parse","set_limit","_val","target","value","set_limit1","set_sentence","set_field","_term","includes","render","columns","Header","accessor","minWidth","headerClassName","footerClassName","maxWidth"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport logo from '../resource/rpx-insight-logo.png';\nimport ReactTable from \"react-table-6\";\nimport MyChart from './MyCharts'\nimport ScatterChart from './ScatterChart'\n\nimport \"react-table-6/react-table.css\";\nimport '../css/PatNum.css';\n\nclass PatNum extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: null,\n            isLoaded: false,\n            items: [],\n            sentence: '',\n            loading: false,\n            chart_list: {\n                'keys': [],\n                'book':[],\n                'corpus':[]\n            },\n            field: 'title_vec',\n            term: 'knn',\n            corpus: 0,\n            limit: 10,\n            total: 0,\n            location:null,\n            isLoading: 'true'\n        };\n    }\n    \n    fetchIpLocation() {\n    fetch('https://ipapi.co/json/')\n      .then(response => response.json())\n      .then(data =>\n        this.setState({\n          location: data,\n          isLoading: false,\n        })\n      )\n      .catch(error => this.setState({ error, isLoading: false }));\n      }\n\n    componentDidMount() {\n        this.fetchIpLocation();\n    }\n    \n    generate_talbe(result) {\n        // console.log('responce:' + JSON.stringify(result))\n        let _item = []\n        result.forEach((items, index) => {\n            let item = items._source\n            let colls='Result'\n            if(this.state.corpus > 0 && index >= this.state.limit)\n                colls='Corpus'\n            _item.push({\n                'bookId': <div className=\"cell\">{item.bookId}</div>,\n                'title': <div className=\"cell\">{item.title}</div>,\n                'authors': <div className=\"cell\">{item.authors}</div>,\n                'published_year': <div className=\"cell\">{item.published_year}</div>,\n                'num_pages': <div className=\"cell\">{parseInt(item.num_pages)}</div>,\n                'score': <div className=\"cell\">{items._score.toFixed(2)}</div>,\n                'collection': <div className=\"cell\">{colls}</div>,\n            })\n        })\n\n        this.setState({\n            isLoaded: true,\n            items: _item,\n            loading: false\n        });\n    }\n\n    search_patent(event) {\n        event.preventDefault()\n//         console.log(\"Keyword: \" + this.state.sentence)\n        if (this.state.sentence !== null && this.state.sentence !== '') {\n            this.setState({ loading: true })\n//             console.log('Api called.')\n            let api = 'http://52.66.250.236:3000/search?index=books_lexical&keyword=' + this.state.sentence + '&field=' + this.state.field + '&limit=' + this.state.limit + '&term=' + this.state.term + '&num='+this.state.corpus + '&location=' + this.state.location\n            // let api = 'http://prod-spark-node1:1212/patnum?index=pat-index&search_field=pat_id&patnum=' + this.state.sentence\n            fetch(api)\n                .then(res => res.json())\n                .then(\n                    (response) => {\n                        if (response.status) {\n                            this.generate_talbe(response.result)\n                            this.setState({total:response.result.length})\n                            if (response.is_knn)\n                                this.setState({ chart_list:response.chart_data.scatter })\n                            else{\n                                let _temp = {\n                                    'keys': [],\n                                    'book':[],\n                                    'corpus':[]\n                                }\n                                this.setState({ chart_list:_temp})\n                            }\n                                \n//                             console.log('SUCCESS: ' + response.result.length)\n                        } else {\n//                             console.log(response.error)\n                            this.setState({ loading: false })\n                        }\n                    },\n                    (error) => {\n                        this.setState({\n                            isLoaded: true,\n                            error\n                        });\n//                         console.log('ERROR: ' + error);\n                        this.setState({ loading: false })\n                    }\n                )\n        } else {\n            console.log('Empty field.')\n        }\n    }\n\n    componentDidMount() {\n        let test_item = JSON.parse('[{\"_index\": \"pat-index\", \"_type\": \"_doc\", \"_id\": \"9749188\", \"_score\": 0.88840634, \"_source\": {\"cpc_full\": \"B42D15/0033\", \"issued_date_or_app_filing_date\": \"1944-02-29\", \"pat_id\": 9749188, \"title\": \"Insurance policy\", \"patnum\": \"US2342981A\"}}, {\"_index\": \"pat-index\", \"_type\": \"_doc\", \"_id\": \"12120408\", \"_score\": 0.88840634, \"_source\": {\"cpc_full\": \"B42D15/0033\", \"issued_date_or_app_filing_date\": \"1941-12-23\", \"pat_id\": 12120408, \"title\": \"Insurance policy\", \"patnum\": \"US2267507A\"}}]')\n        this.generate_talbe([])\n    }\n\n    set_limit(event) {\n        let _val = parseInt(event.target.value)\n        this.setState({ limit: _val  })\n        console.log('Limit set to:' + _val)\n    }\n\n    set_limit1(event) {\n        let _val = parseInt(event.target.value)\n        this.setState({ corpus: _val  })\n        console.log('Limit set to:' + _val)\n    }\n\n    set_sentence(event) {\n        let _val = event.target.value\n        // let _val = event.target.value.replace(/[\\W_]+/g, ',').replace(/^\\,$/g, '')\n        this.setState({ sentence: _val })\n        console.log('Keyword set to:' + this.state.sentence)\n    }\n\n    set_field(event) {\n        let _val = event.target.value\n        let _term = 'text'\n        if (_val.includes('vec')) {\n            _term = 'knn'\n        }\n        this.setState({ field: event.target.value, term: _term })\n        // console.log('Filed set to:' + event.target.value)\n    }\n\n    render() {\n        const columns = [\n            {\n                Header: 'TITLE',\n                accessor: 'title',\n                minWidth: 100,\n                headerClassName: 'table-header',\n                footerClassName: 'table-header'\n            },\n            {\n                Header: 'AUTHORS',\n                accessor: 'authors',\n                headerClassName: 'table-header',\n                minWidth:80\n            },\n            {\n                Header: 'PUBLICATION YEAR',\n                accessor: 'published_year',\n                headerClassName: 'table-header',\n                maxWidth: 140\n            },\n            {\n                Header: 'PAGES',\n                accessor: 'num_pages',\n                headerClassName: 'table-header',\n                maxWidth: 60\n            },\n            {\n                Header: 'SCORE',\n                accessor: 'score',\n                headerClassName: 'table-header',\n                maxWidth: 60\n            },\n            {\n                Header: 'COLLECTION',\n                accessor: 'collection',\n                headerClassName: 'table-header',\n                maxWidth: 100\n            }\n        ]\n        return (\n            <div className=\"PatNum\">\n                <div className=\"PatNum-header\">\n                    {/* <img src={logo} className=\"rpx-insight-logo\" alt=\"logo\" /> */}\n                    <div className=\"PatNum-title\">Building a real-time similarity matching system using Embedding</div>\n                </div>\n                <div className=\"PatNum-container\">\n                    <form className=\"PatNum-cont-pane\" onSubmit={() => this.search_patent(event)}>\n                        <div className=\"left-cont-1\">\n                            <div className=\"PatNum-pane-tap\">\n                                <div className=\"left-cont\">\n                                    <textarea spellCheck=\"false\" className=\"pat_text\" placeholder=\"Keywords eg: System\" onChange={() => this.set_sentence(event)} required value={this.state.sentence} />\n                                </div>\n                                <select className=\"select_filed\" onChange={() => this.set_field(event)} required>\n                                    <option className=\"opt\" value=\"title_vec\">Title [USE]</option>\n                                    <option className=\"opt\" value=\"title\">Title [DB]</option>\n                                    <option className=\"opt\" value=\"title_syn\">Title [ELASTIC]</option>\n                                    <option className=\"opt\" value=\"title_desc\">Title + DESC + [ELASTIC]</option>\n                                    <option className=\"opt\" value=\"title_desc_vec\">Title + DESC [USE] </option>\n                                </select>\n                                <input type=\"number\" className=\"corpus\" min=\"2\" max=\"1000\" placeholder=\"Limit\" defaultValue=\"10\" onChange={() => this.set_limit(event)} required />\n                                <div className=\"right-cont\">\n                                    <input type=\"number\" className=\"limit\" min=\"0\" max=\"1000\" placeholder=\"corpus\" onChange={() => this.set_limit1(event)} />\n                                    <input type=\"submit\" className=\"PatNum-search\" value=\"search\" />\n                                </div>\n                                \n                            </div >\n                            <div className=\"count\">Total count: {this.state.total}</div>\n                            <div className=\"PatNum-pane-tap\">\n                                <ReactTable data={this.state.items} columns={columns} defaultPageSize={10}\n                                    pageSizeOptions={[5, 10, 50, 100, 1000]} className=\"PatNum-table\" showPagination={true}\n                                    loading={this.state.loading} filterable={false}\n                                />\n                            </div>\n                        </div>\n                        <div className=\"PatNum-pane-tap1\">\n                            <div className=\"ScatterChart\"><ScatterChart data={this.state.chart_list} corpus={this.state.corpus}/></div>\n                        </div>\n\n                    </form>\n                </div>\n            </div >\n        );\n    }\n}\n\nexport default PatNum;"]},"metadata":{},"sourceType":"module"}