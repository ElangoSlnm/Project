{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport { useEffect, useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { v4 as uuid } from 'uuid';\nimport { attempt } from 'lodash-es';\nimport AxisContext from '../AxisContext';\nimport { getNonEventHandlerProps, getEventsConfig } from '../../utils/events';\nimport { validAxisTypes } from '../../utils/propTypeValidators';\nimport useModifiedProps from '../UseModifiedProps';\nimport useChart from '../UseChart';\nimport createProvidedAxis from './createProvidedAxis';\n\nvar Axis = function Axis(_ref) {\n  var _ref$children = _ref.children,\n      children = _ref$children === void 0 ? null : _ref$children,\n      _ref$dynamicAxis = _ref.dynamicAxis,\n      dynamicAxis = _ref$dynamicAxis === void 0 ? true : _ref$dynamicAxis,\n      restProps = _objectWithoutProperties(_ref, [\"children\", \"dynamicAxis\"]);\n\n  var chart = useChart();\n  var axisRef = useRef(null);\n  var providedAxisRef = useRef(null);\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      hasAxis = _useState2[0],\n      setHasAxis = _useState2[1];\n\n  useEffect(function () {\n    axisRef.current = createAxis(chart, restProps, dynamicAxis);\n    providedAxisRef.current = createProvidedAxis(axisRef.current);\n    setHasAxis(true);\n    chart.needsRedraw();\n    return function () {\n      var axis = axisRef.current;\n\n      if (axis.remove && dynamicAxis) {\n        // Axis may have already been removed, i.e. when Chart unmounted\n        attempt(axis.remove.bind(axis), false);\n        chart.needsRedraw();\n      }\n    };\n  }, []);\n  var modifiedProps = useModifiedProps(restProps);\n  useEffect(function () {\n    if (!hasAxis) return;\n\n    if (modifiedProps !== false) {\n      var axis = axisRef.current; // if there are plotlines or bands, the chart needs to be redrawn before\n      // they can be accessed\n\n      if (axis.plotLinesAndBands && axis.plotLinesAndBands.length > 0) {\n        axis.update(modifiedProps, true);\n      } else {\n        axis.update(modifiedProps, false);\n        chart.needsRedraw();\n      }\n    }\n  });\n  if (!hasAxis) return null;\n  return /*#__PURE__*/React.createElement(AxisContext.Provider, {\n    value: providedAxisRef.current\n  }, children);\n};\n\nvar getAxisConfig = function getAxisConfig(props) {\n  var _props$id = props.id,\n      id = _props$id === void 0 ? uuid : _props$id,\n      rest = _objectWithoutProperties(props, [\"id\"]);\n\n  var axisId = typeof id === 'function' ? id() : id;\n  var nonEventProps = getNonEventHandlerProps(rest);\n  var events = getEventsConfig(rest);\n  return _objectSpread({\n    id: axisId,\n    title: {\n      text: null\n    },\n    events: events\n  }, nonEventProps);\n};\n\nvar createAxis = function createAxis(chart, props, dynamicAxis) {\n  var _props$id2 = props.id,\n      id = _props$id2 === void 0 ? uuid : _props$id2,\n      isX = props.isX; // Create Highcharts Axis\n\n  var opts = getAxisConfig(props);\n  var axis;\n\n  if (dynamicAxis) {\n    axis = chart.addAxis(opts, isX, false);\n  } else {\n    // ZAxis cannot be added dynamically, Maps only have a single axes - update instead\n    var axisId = typeof id === 'function' ? id() : id;\n    axis = chart.get(axisId);\n    axis.update.call(axis, opts, false);\n  }\n\n  return axis;\n};\n\nexport default Axis;","map":{"version":3,"sources":["/opt/rpx/react_ui/node_modules/react-jsx-highcharts/dist/es/components/Axis/Axis.js"],"names":["_objectSpread","_slicedToArray","_objectWithoutProperties","React","useEffect","useState","useRef","PropTypes","v4","uuid","attempt","AxisContext","getNonEventHandlerProps","getEventsConfig","validAxisTypes","useModifiedProps","useChart","createProvidedAxis","Axis","_ref","_ref$children","children","_ref$dynamicAxis","dynamicAxis","restProps","chart","axisRef","providedAxisRef","_useState","_useState2","hasAxis","setHasAxis","current","createAxis","needsRedraw","axis","remove","bind","modifiedProps","plotLinesAndBands","length","update","createElement","Provider","value","getAxisConfig","props","_props$id","id","rest","axisId","nonEventProps","events","title","text","_props$id2","isX","opts","addAxis","get","call"],"mappings":"AAAA,OAAOA,aAAP,MAA0B,0CAA1B;AACA,OAAOC,cAAP,MAA2B,0CAA3B;AACA,OAAOC,wBAAP,MAAqC,oDAArC;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,SAAT,EAAoBC,QAApB,EAA8BC,MAA9B,QAA4C,OAA5C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,EAAE,IAAIC,IAAf,QAA2B,MAA3B;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,SAASC,uBAAT,EAAkCC,eAAlC,QAAyD,oBAAzD;AACA,SAASC,cAAT,QAA+B,gCAA/B;AACA,OAAOC,gBAAP,MAA6B,qBAA7B;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;;AAEA,IAAIC,IAAI,GAAG,SAASA,IAAT,CAAcC,IAAd,EAAoB;AAC7B,MAAIC,aAAa,GAAGD,IAAI,CAACE,QAAzB;AAAA,MACIA,QAAQ,GAAGD,aAAa,KAAK,KAAK,CAAvB,GAA2B,IAA3B,GAAkCA,aADjD;AAAA,MAEIE,gBAAgB,GAAGH,IAAI,CAACI,WAF5B;AAAA,MAGIA,WAAW,GAAGD,gBAAgB,KAAK,KAAK,CAA1B,GAA8B,IAA9B,GAAqCA,gBAHvD;AAAA,MAIIE,SAAS,GAAGtB,wBAAwB,CAACiB,IAAD,EAAO,CAAC,UAAD,EAAa,aAAb,CAAP,CAJxC;;AAMA,MAAIM,KAAK,GAAGT,QAAQ,EAApB;AACA,MAAIU,OAAO,GAAGpB,MAAM,CAAC,IAAD,CAApB;AACA,MAAIqB,eAAe,GAAGrB,MAAM,CAAC,IAAD,CAA5B;;AAEA,MAAIsB,SAAS,GAAGvB,QAAQ,CAAC,KAAD,CAAxB;AAAA,MACIwB,UAAU,GAAG5B,cAAc,CAAC2B,SAAD,EAAY,CAAZ,CAD/B;AAAA,MAEIE,OAAO,GAAGD,UAAU,CAAC,CAAD,CAFxB;AAAA,MAGIE,UAAU,GAAGF,UAAU,CAAC,CAAD,CAH3B;;AAKAzB,EAAAA,SAAS,CAAC,YAAY;AACpBsB,IAAAA,OAAO,CAACM,OAAR,GAAkBC,UAAU,CAACR,KAAD,EAAQD,SAAR,EAAmBD,WAAnB,CAA5B;AACAI,IAAAA,eAAe,CAACK,OAAhB,GAA0Bf,kBAAkB,CAACS,OAAO,CAACM,OAAT,CAA5C;AACAD,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAN,IAAAA,KAAK,CAACS,WAAN;AACA,WAAO,YAAY;AACjB,UAAIC,IAAI,GAAGT,OAAO,CAACM,OAAnB;;AAEA,UAAIG,IAAI,CAACC,MAAL,IAAeb,WAAnB,EAAgC;AAC9B;AACAb,QAAAA,OAAO,CAACyB,IAAI,CAACC,MAAL,CAAYC,IAAZ,CAAiBF,IAAjB,CAAD,EAAyB,KAAzB,CAAP;AACAV,QAAAA,KAAK,CAACS,WAAN;AACD;AACF,KARD;AASD,GAdQ,EAcN,EAdM,CAAT;AAeA,MAAII,aAAa,GAAGvB,gBAAgB,CAACS,SAAD,CAApC;AACApB,EAAAA,SAAS,CAAC,YAAY;AACpB,QAAI,CAAC0B,OAAL,EAAc;;AAEd,QAAIQ,aAAa,KAAK,KAAtB,EAA6B;AAC3B,UAAIH,IAAI,GAAGT,OAAO,CAACM,OAAnB,CAD2B,CACC;AAC5B;;AAEA,UAAIG,IAAI,CAACI,iBAAL,IAA0BJ,IAAI,CAACI,iBAAL,CAAuBC,MAAvB,GAAgC,CAA9D,EAAiE;AAC/DL,QAAAA,IAAI,CAACM,MAAL,CAAYH,aAAZ,EAA2B,IAA3B;AACD,OAFD,MAEO;AACLH,QAAAA,IAAI,CAACM,MAAL,CAAYH,aAAZ,EAA2B,KAA3B;AACAb,QAAAA,KAAK,CAACS,WAAN;AACD;AACF;AACF,GAdQ,CAAT;AAeA,MAAI,CAACJ,OAAL,EAAc,OAAO,IAAP;AACd,SAAO,aAAa3B,KAAK,CAACuC,aAAN,CAAoB/B,WAAW,CAACgC,QAAhC,EAA0C;AAC5DC,IAAAA,KAAK,EAAEjB,eAAe,CAACK;AADqC,GAA1C,EAEjBX,QAFiB,CAApB;AAGD,CAnDD;;AAqDA,IAAIwB,aAAa,GAAG,SAASA,aAAT,CAAuBC,KAAvB,EAA8B;AAChD,MAAIC,SAAS,GAAGD,KAAK,CAACE,EAAtB;AAAA,MACIA,EAAE,GAAGD,SAAS,KAAK,KAAK,CAAnB,GAAuBtC,IAAvB,GAA8BsC,SADvC;AAAA,MAEIE,IAAI,GAAG/C,wBAAwB,CAAC4C,KAAD,EAAQ,CAAC,IAAD,CAAR,CAFnC;;AAIA,MAAII,MAAM,GAAG,OAAOF,EAAP,KAAc,UAAd,GAA2BA,EAAE,EAA7B,GAAkCA,EAA/C;AACA,MAAIG,aAAa,GAAGvC,uBAAuB,CAACqC,IAAD,CAA3C;AACA,MAAIG,MAAM,GAAGvC,eAAe,CAACoC,IAAD,CAA5B;AACA,SAAOjD,aAAa,CAAC;AACnBgD,IAAAA,EAAE,EAAEE,MADe;AAEnBG,IAAAA,KAAK,EAAE;AACLC,MAAAA,IAAI,EAAE;AADD,KAFY;AAKnBF,IAAAA,MAAM,EAAEA;AALW,GAAD,EAMjBD,aANiB,CAApB;AAOD,CAfD;;AAiBA,IAAIlB,UAAU,GAAG,SAASA,UAAT,CAAoBR,KAApB,EAA2BqB,KAA3B,EAAkCvB,WAAlC,EAA+C;AAC9D,MAAIgC,UAAU,GAAGT,KAAK,CAACE,EAAvB;AAAA,MACIA,EAAE,GAAGO,UAAU,KAAK,KAAK,CAApB,GAAwB9C,IAAxB,GAA+B8C,UADxC;AAAA,MAEIC,GAAG,GAAGV,KAAK,CAACU,GAFhB,CAD8D,CAGzC;;AAErB,MAAIC,IAAI,GAAGZ,aAAa,CAACC,KAAD,CAAxB;AACA,MAAIX,IAAJ;;AAEA,MAAIZ,WAAJ,EAAiB;AACfY,IAAAA,IAAI,GAAGV,KAAK,CAACiC,OAAN,CAAcD,IAAd,EAAoBD,GAApB,EAAyB,KAAzB,CAAP;AACD,GAFD,MAEO;AACL;AACA,QAAIN,MAAM,GAAG,OAAOF,EAAP,KAAc,UAAd,GAA2BA,EAAE,EAA7B,GAAkCA,EAA/C;AACAb,IAAAA,IAAI,GAAGV,KAAK,CAACkC,GAAN,CAAUT,MAAV,CAAP;AACAf,IAAAA,IAAI,CAACM,MAAL,CAAYmB,IAAZ,CAAiBzB,IAAjB,EAAuBsB,IAAvB,EAA6B,KAA7B;AACD;;AAED,SAAOtB,IAAP;AACD,CAlBD;;AAoBA,eAAejB,IAAf","sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport { useEffect, useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { v4 as uuid } from 'uuid';\nimport { attempt } from 'lodash-es';\nimport AxisContext from '../AxisContext';\nimport { getNonEventHandlerProps, getEventsConfig } from '../../utils/events';\nimport { validAxisTypes } from '../../utils/propTypeValidators';\nimport useModifiedProps from '../UseModifiedProps';\nimport useChart from '../UseChart';\nimport createProvidedAxis from './createProvidedAxis';\n\nvar Axis = function Axis(_ref) {\n  var _ref$children = _ref.children,\n      children = _ref$children === void 0 ? null : _ref$children,\n      _ref$dynamicAxis = _ref.dynamicAxis,\n      dynamicAxis = _ref$dynamicAxis === void 0 ? true : _ref$dynamicAxis,\n      restProps = _objectWithoutProperties(_ref, [\"children\", \"dynamicAxis\"]);\n\n  var chart = useChart();\n  var axisRef = useRef(null);\n  var providedAxisRef = useRef(null);\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      hasAxis = _useState2[0],\n      setHasAxis = _useState2[1];\n\n  useEffect(function () {\n    axisRef.current = createAxis(chart, restProps, dynamicAxis);\n    providedAxisRef.current = createProvidedAxis(axisRef.current);\n    setHasAxis(true);\n    chart.needsRedraw();\n    return function () {\n      var axis = axisRef.current;\n\n      if (axis.remove && dynamicAxis) {\n        // Axis may have already been removed, i.e. when Chart unmounted\n        attempt(axis.remove.bind(axis), false);\n        chart.needsRedraw();\n      }\n    };\n  }, []);\n  var modifiedProps = useModifiedProps(restProps);\n  useEffect(function () {\n    if (!hasAxis) return;\n\n    if (modifiedProps !== false) {\n      var axis = axisRef.current; // if there are plotlines or bands, the chart needs to be redrawn before\n      // they can be accessed\n\n      if (axis.plotLinesAndBands && axis.plotLinesAndBands.length > 0) {\n        axis.update(modifiedProps, true);\n      } else {\n        axis.update(modifiedProps, false);\n        chart.needsRedraw();\n      }\n    }\n  });\n  if (!hasAxis) return null;\n  return /*#__PURE__*/React.createElement(AxisContext.Provider, {\n    value: providedAxisRef.current\n  }, children);\n};\n\nvar getAxisConfig = function getAxisConfig(props) {\n  var _props$id = props.id,\n      id = _props$id === void 0 ? uuid : _props$id,\n      rest = _objectWithoutProperties(props, [\"id\"]);\n\n  var axisId = typeof id === 'function' ? id() : id;\n  var nonEventProps = getNonEventHandlerProps(rest);\n  var events = getEventsConfig(rest);\n  return _objectSpread({\n    id: axisId,\n    title: {\n      text: null\n    },\n    events: events\n  }, nonEventProps);\n};\n\nvar createAxis = function createAxis(chart, props, dynamicAxis) {\n  var _props$id2 = props.id,\n      id = _props$id2 === void 0 ? uuid : _props$id2,\n      isX = props.isX; // Create Highcharts Axis\n\n  var opts = getAxisConfig(props);\n  var axis;\n\n  if (dynamicAxis) {\n    axis = chart.addAxis(opts, isX, false);\n  } else {\n    // ZAxis cannot be added dynamically, Maps only have a single axes - update instead\n    var axisId = typeof id === 'function' ? id() : id;\n    axis = chart.get(axisId);\n    axis.update.call(axis, opts, false);\n  }\n\n  return axis;\n};\n\nexport default Axis;"]},"metadata":{},"sourceType":"module"}